id,title,time,by,score,dead,deleted,descendants,kids,parent,parts,poll,text,type,url,_ctx
35312235,GPD Pocket 3 mini-laptop gets a 3rd-party 4G LTE module,2023-03-26T08:08:43Z,walterbell,1,false,false,,,,,,,story,https://liliputing.com/the-gpd-pocket-3-mini-laptops-gets-a-3rd-party-4g-lte-module-making-the-most-of-modularity/,"{""connection_name"":""hackernews""}"
35312032,Epsilons and Deltas,2023-03-26T07:36:11Z,boogiemath,1,false,false,,,,,,,story,https://boogiemath.org/mathcircle/circle-2,"{""connection_name"":""hackernews""}"
35312224,Geohash,2023-03-26T08:06:51Z,tosh,1,false,false,,,,,,,story,https://en.wikipedia.org/wiki/Geohash,"{""connection_name"":""hackernews""}"
35311979,The Malthusians Are Back,2023-03-26T07:28:04Z,goplayoutside,3,false,false,1,[35311984],,,,,story,https://www.theatlantic.com/ideas/archive/2023/03/population-control-movement-climate-malthusian-similarities/673450/,"{""connection_name"":""hackernews""}"
35312194,Pgwire: a Rust library for building PostgreSQL compatible servers,2023-03-26T08:01:09Z,todsacerdoti,1,false,false,,,,,,,story,https://github.com/sunng87/pgwire,"{""connection_name"":""hackernews""}"
35312233,Why Do We Like Sad Stories?,2023-03-26T08:08:32Z,trifit,1,false,false,,,,,,,story,https://www.verywellmind.com/why-do-we-like-sad-stories-5224078,"{""connection_name"":""hackernews""}"
35312231,Ask HN: How to enforce checks in CI vs. Git hooks,2023-03-26T08:08:11Z,mshekow,1,false,false,,,,,,"Let&#x27;s say you want to enforce checks (e.g. linting, or the format of a Git commit message) as early as possible. At the same time, you want to avoid killing the developer experience (e.g. because of a buggy or long-running local Git pre-commit hook).<p>I researched the topic and found 3 ways to implement such kinds of checks - I&#x27;m wondering whether you know other ones, or what your experience has been using any of these (or possibly a combination of them):<p>1) Local(!) Git hooks:<p>Useful ones are e.g. &quot;pre-commit&quot; or &quot;pre-push&quot;. They offer the fastest feedback, but are unreliable, because developers need to install them explicitly. They are also either limited to bash, or require extra tooling to be present on the developer&#x27;s machine (e.g. a linter). One could do this in two ways:<p>1.a) Use any tooling installed _natively_ on the developer&#x27;s machine, e.g. a Python script, or pre-commit.org. Pro: hooks terminate quickly; con: requires installing the tools, version drift may happen (e.g. outdated Python interpreter)<p>1.b) Docker-based: package the tools into a Docker image. Pro: allows fixing the tooling and auto-update it when needed; Con: requires running Docker, may be slow if a new container has to be created<p>Slow pre-_commit_ hooks are especially bad for DX, particularly if devs commit often! For pre-_push_ hooks, a slower hook might be less terrible.<p>===<p>2) Remote(!) Git hooks, particularly the &quot;pre-receive&quot; hook.<p>Pro: avoids having to rewrite already-pushed history if any checks are violated<p>Cons: complicated to set up on some platforms, or sometimes not possible at all (e.g. github.com); limited to bash<p>===<p>3) CI jobs: you run the checks in CI as jobs, once the developer pushed the code.<p>Cons: feedback is provided quite late, compared to local Git hooks; requires dangerous force-push to rewrite history, e.g. if the checks demand that the commit messages have to be rephrased.<p>Pros: CI jobs are reliable; you can use any tooling you want (beyond Bash), and there are sometimes ready-made jobs&#x2F;tasks, e.g. https:&#x2F;&#x2F;commitsar.aevea.ee<p>====<p>One can of course combine multiple approaches from above, but it would require more maintenance. For instance, you could have a local pre-commit hook or local pre-push hook that checks the branch name and commit message formats prior to pushing them, but additionally have CI jobs that validate the same data. However, there is maintenance effort to ensure that both approaches are in sync (e.g. check the same commit message regex) and do not contradict each other.",story,,"{""connection_name"":""hackernews""}"
35312117,Infographic back page about the Kowloon Walled City,2023-03-26T07:51:31Z,mariuz,3,false,false,,,,,,,story,https://twitter.com/adolfux/status/1636026798894104578,"{""connection_name"":""hackernews""}"
35312230,User-Agent: ChatGPT Disallow,2023-03-26T08:08:04Z,rognjen,1,false,false,,,,,,,story,https://ognjen.io/gpt-disallow/,"{""connection_name"":""hackernews""}"
35312039,Bill Gates published a 7-page letter about AI and his predictions for its future,2023-03-26T07:38:21Z,zaplin,2,false,false,,,,,,,story,https://twitter.com/mrgreen/status/1639661275146862592,"{""connection_name"":""hackernews""}"
35311976,Your Reading Should Be Messy,2023-03-26T07:27:37Z,ingve,1,false,false,,,,,,,story,https://www.robinrendle.com/notes/your-reading-should-be-messy/,"{""connection_name"":""hackernews""}"
35312238,Evaluation of Location Encoding Systems,2023-03-26T08:09:10Z,tosh,1,false,false,,,,,,,story,https://github.com/google/open-location-code/wiki/Evaluation-of-Location-Encoding-Systems,"{""connection_name"":""hackernews""}"
35312085,Plastic rocks mean a rocky future for millions of people,2023-03-26T07:47:07Z,gbenga4real,1,false,false,,,,,,,story,https://adetokunbo.substack.com/p/plastic-rocks-mean-a-rocky-future,"{""connection_name"":""hackernews""}"
35311994,Can We Stop with Those Horrible “System Overview” Dashboards Already?,2023-03-26T07:29:36Z,slyall,2,false,false,,,,,,,story,https://betterprogramming.pub/can-we-stop-with-those-horrible-system-overview-dashboards-already-5ea10a28fecf?gi=ea8d1c2798d5,"{""connection_name"":""hackernews""}"
35312089,Ask HN: How many don't want others to contribute to their open source projects?,2023-03-26T07:47:58Z,ipaddr,1,false,false,1,[35312268],,,,I&#x27;ve created a project posted on github and I&#x27;m getting prs for the first time.  I should probably feel great but part of me doesn&#x27;t really want to accept any changes.  In one way my role moves reviewing which is not really why I started the project and feels like work.  But more importantly I lose control and maybe a bit of credit.  Being able to say I did everything feels cleaner than 98.7% and with only my changes I feel more free to introduce any new feature or refactor with regard to others who may be working under old assumptions.  Has anyone felt similiar?,story,,"{""connection_name"":""hackernews""}"
